################################################################################
# Dockerfile that builds 'yanwk/sd-webui-base:dev-env'.
# A environment with CUDA devkit & Intel C++ Compiler & Intel MKL
# that can be used for compiling PyTorch2 (w/ Magma) & xFormers.
# This image is ~5.5GiB large, and only needs monthly build.
################################################################################

FROM opensuse/tumbleweed:latest

LABEL maintainer="code@yanwk.fun"

WORKDIR /root

# https://gitlab.com/nvidia/container-images/cuda/
# https://www.intel.com/content/www/us/en/developer/tools/oneapi/onemkl-download.html
RUN --mount=type=cache,target=/var/cache/zypp \
    set -eu \
    && printf "\
[cuda-opensuse15-x86_64]\n\
name=cuda-opensuse15-x86_64\n\
baseurl=https://developer.download.nvidia.com/compute/cuda/repos/opensuse15/x86_64\n\
enabled=1\n\
gpgcheck=1\n\
gpgkey=https://developer.download.nvidia.com/compute/cuda/repos/opensuse15/x86_64/D42D0685.pub\n" \
        > /etc/zypp/repos.d/cuda-opensuse15.repo \
    && printf "\
[intel-oneapi]\n\
name=intel-oneapi\n\
baseurl=https://yum.repos.intel.com/oneapi\n\
enabled=1\n\
gpgcheck=1\n\
gpgkey=https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB\n" \
        > /etc/zypp/repos.d/intel-oneapi.repo \
    && zypper --gpg-auto-import-keys \
        install --no-confirm --no-recommends --auto-agree-with-licenses \
            git make cmake ninja find \
            fish shadow plocate fd \
            gperftools-devel \
            python311 python311-pip python311-devel \
            intel-oneapi-compiler-dpcpp-cpp intel-oneapi-compiler-fortran \
            intel-oneapi-mkl intel-oneapi-mkl-devel \
            cuda-cudart-12-1 cuda-compat-12-1 \
            cuda-libraries-12-1 cuda-nvtx-12-1 libnpp-12-1 libcublas-12-1 \
            cuda-command-line-tools-12-1 cuda-libraries-devel-12-1 \
            cuda-minimal-build-12-1 cuda-cudart-devel-12-1 cuda-nvprof-12-1 \
            cuda-nvml-devel-12-1 libcublas-devel-12-1 libnpp-devel-12-1 \
            cuda-cccl-12-1 cuda-nvcc-12-1 cuda-nvrtc-devel-12-1 

RUN ln -s /usr/bin/python3 /usr/bin/python

# Use TCMALLOC from gperftools.
ENV LD_PRELOAD=libtcmalloc.so
# PATH for NVCC
ENV PATH="${PATH}:/usr/local/cuda-12.1/bin"
ENV LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/cuda-12.1/lib64"
